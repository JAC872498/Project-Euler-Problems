"""
"""

from itertools import permutations

def isCube(n,cubes):
	if(n in cubes):
		return(True)
	c=int(n**(1/3.))
	return(c**3==n) or ((c+1)**3==n)
	
def translateNum(num):
	newNum=[0,0,0,0,0,0,0,0,0,0]
	for n in range(len(str(num))):
		newNum[(int(num/(10**(n))%10))]+=1
	return(newNum)
	
def findSmallCube(num,cubes):
	small=num
	for perm in permutations(int(i) for i in str(num)):
		n=0
		for p in perm:
			n=(n*10)+p
		if(isCube(n,cubes) and n<small):
			small=n
	return(small)

def findPerms(num,cubes):
	tot=0
	used=[]
	for perm in permutations(int(i) for i in str(num)):
		n=0
		for p in perm:
			n=(n*10)+p
		if(len(str(num))==len(str(n)) and n in cubes and n not in used):
			tot+=1
			used.append(n)
	return(tot)
		

"""cubes=[]
num=0
while(findPerms(num**3,cubes)!=4):
	num+=1
	if(len(str(num**3))!=len(str((num-1)**3))):
		cubes=[]
	cubes.append(num**3)
	print(cubes)
	print(num)
print(num**3)
print(findSmallCube(num**3,cubes))"""
print(translateNum(123456789))
print(translateNum(9876543210))
print(translateNum(158))
print(translateNum(6910430684))
#TODO: translate number into 9 digit num based on digit occurance(123456789 = 111111111, 158 = 100010010). If the same 9 digit num occurs that it is a cube permutation
